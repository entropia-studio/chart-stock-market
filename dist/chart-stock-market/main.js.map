{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart-stocks.service.ts","webpack:///./src/app/company.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/google-chart-base.service.ts","webpack:///./src/app/google-line-chart.service.ts","webpack:///./src/app/line-char-config-class.ts","webpack:///./src/app/line-chart/line-chart.component.css","webpack:///./src/app/line-chart/line-chart.component.html","webpack:///./src/app/line-chart/line-chart.component.ts","webpack:///./src/app/socket-broadcast.service.ts","webpack:///./src/app/websocket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".stock-box {\\n    width: 344px;\\n    background-color: #448AFF; \\n    margin-bottom: 10px;\\n    \\n  }\\n  .mat-card{\\n      padding: 15px;\\n  }\\n  .mat-card-content {\\n    font-size: 1.1em;\\n  }\\n  .mat-card-title{\\n    font-size: 1.5em;\\n  }\\n  .zoom {\\n    display: flex;\\n    width: 555px;\\n    font-size: 1em;\\n  }\\n  .zoom button {\\n    border: 0px;\\n    font-size: 0.9em;\\n    background-color: #212121;\\n    color: white;\\n  }\\n  .zoom li {\\n    padding-right: 5px;\\n  }\\n  .btn-selected{\\n    background-color: #607D8B !important;\\n  }\\n  .stocks {\\n    display: flex;\\n    justify-content: space-between;\\n    width: 100%;\\n    flex-wrap: wrap;\\n  }\\n  .footer{\\n    display: flex;\\n    flex-direction: column;\\n    margin: auto;\\n    align-items: center;        \\n    margin: 15px 0 15px 0;\\n    font-size: 0.9em;\\n  }\\n  .main {\\n    width: 1140px;\\n    display: flex;\\n    justify-content: space-between;\\n    background-color: #455A64;\\n    color: #FFFFFF;\\n    font-size: 0.9em;\\n    flex-wrap: wrap;\\n    padding: 15px;\\n    margin-bottom: 10px;\\n  }\\n  .chart {\\n    width: 100%;\\n    margin-top: 0.8em;\\n    margin-bottom: 0.8em;\\n  }\"","module.exports = \"<div class=\\\"main\\\">\\n  <span style=\\\"width: 100%;text-align: center\\\">STOCKS</span>\\n  <div class=\\\"zoom\\\">\\n    <li>ZOOM</li>\\n    <li><button (click)=\\\"setPeriod('1M')\\\" [class.btn-selected]=\\\"period == '1M'\\\">1M</button></li>\\n    <li><button (click)=\\\"setPeriod('3M')\\\" [class.btn-selected]=\\\"period == '3M'\\\">3M</button></li>\\n    <li><button (click)=\\\"setPeriod('6M')\\\" [class.btn-selected]=\\\"period == '6M'\\\">6M</button></li>\\n    <li><button (click)=\\\"setPeriod('YTD')\\\" [class.btn-selected]=\\\"period == 'YTD'\\\">YTD</button></li>\\n    <li><button (click)=\\\"setPeriod('1Y')\\\" [class.btn-selected]=\\\"period == '1Y'\\\">1Y</button></li>\\n    <li><button (click)=\\\"setPeriod('2Y')\\\" [class.btn-selected]=\\\"period == '2Y'\\\">2Y</button></li>    \\n    <li><button (click)=\\\"setPeriod('5Y')\\\" [class.btn-selected]=\\\"period == '5Y'\\\">5Y</button></li>    \\n  </div>    \\n  <div class=\\\"chart\\\" id=\\\"chart_div\\\" >\\n    <app-dashboard [companies]=\\\"companies\\\" [period]=\\\"period\\\" *ngIf=\\\"companies\\\"  ></app-dashboard>\\n  </div>\\n  <div class=\\\"stocks\\\">\\n    <mat-card class=\\\"stock-box\\\" *ngFor=\\\"let company of companies\\\">\\n        <mat-card-title>{{company.code}}</mat-card-title>\\n        <mat-card-content>{{company.name}}</mat-card-content>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"deleteCompany(company)\\\">REMOVE</button>\\n    </mat-card>  \\n    <mat-card class=\\\"stock-box\\\">\\n      <mat-card-title>Syncs in realtime across clients</mat-card-title>\\n      <mat-card-content> \\n          <input #companyCode />                  \\n      </mat-card-content>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addCompany(companyCode.value);companyCode.value=''\\\">ADD</button>\\n  </mat-card>  \\n  </div>\\n</div>\\n<div class=\\\"footer\\\">\\n<a href=\\\"https://github.com/entropia-studio/\\\" target=\\\"_blank\\\">Coded by Entropia Studio</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ChartStocksService} from './chart-stocks.service';\nimport {Company} from './company';\nimport {SocketBroadcastService} from './socket-broadcast.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],  \n  \n})\nexport class AppComponent implements OnInit{    \n  companies: Company[];\n  company: Company = new Company; \n  period: string = \"1M\";\n    \n  constructor(       \n    private chartStocksService: ChartStocksService,\n    private socketBroadcastService: SocketBroadcastService,    \n  ) {\n    socketBroadcastService.messages.subscribe((msg) => {\n      this.getCompanies();      \n    });\n  }\n\n  ngOnInit() : void{        \n    this.getCompanies();        \n  }\n\n  getCompanies() : void {\n    this.chartStocksService.getCompanies()\n      .subscribe( companies => {\n        this.companies = companies;                     \n      }\n    )\n  }\n\n  addCompany(companyCode: string): void {\n    companyCode = companyCode.trim();\n    if (!companyCode) { return; }    \n    this.company.code = companyCode;\n    this.chartStocksService.addCompany(this.company)\n      .subscribe(company => {\n        this.companies.push(company);\n        this.socketBroadcastService.messages.next({\"action\": \"add\"});\n      });\n  }\n  \n  deleteCompany(company : Company) {    \n    this.companies = this.companies.filter(c => c !== company);\n    this.chartStocksService.deleteCompany(company)\n    .subscribe(() => {\n      this.socketBroadcastService.messages.next({\"action\": \"delete\"});\n    });    \n  }\n  setPeriod(period: string):void {\n    this.period = period;\n  } \n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ChartStocksService} from './chart-stocks.service';\nimport {GoogleChartBaseService} from './google-chart-base.service';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {GoogleLineChartService} from './google-line-chart.service';\nimport {MatSliderModule} from '@angular/material/slider';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LineChartComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,   \n    MatSliderModule,  \n\n  ],\n  providers: [ChartStocksService,\n              GoogleChartBaseService,\n              GoogleLineChartService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable,throwError,of} from 'rxjs';\nimport {ChartStocks} from './chart-stocks';\nimport {Company} from './company';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartStocksService {    \n  \n\n  urlApiStocks: string = 'https://api.iextrading.com/1.0/stock/market/batch?types=quote,chart';\n\n\n  constructor(\n    private http: HttpClient,   \n  ){ }\n  \n  getUrlApiCompanies = (): string => {\n    var url_api = location.protocol + '//' + location.host +':8080/api';      \n    return location.hostname == '8080' ? url_api + '/api'  : url_api + ':8080/api';\n  }\n\n  getCompanies = ():Observable<Company[]> => {    \n    console.log('Location: '+this.getUrlApiCompanies());\n    return this.http.get<Company[]>(this.getUrlApiCompanies() + '/stocks')\n      .pipe(        \n        catchError(this.handleError('getCompanies',[]))\n      )\n      \n  }\n\n  stocksSearchValues = (symbols: Array<String>, range: String): Observable<ChartStocks> => {\n    const mUrl = this.urlApiStocks + \"&symbols= \" + symbols.join() + \"&range=\" + range;      \n    return this.http.get<ChartStocks>(mUrl);           \n  }\n\n  deleteCompany = (company: Company) : Observable<Company> => {    \n    const mUrl = this.getUrlApiCompanies() + '/company/delete/' + company.code;    \n    return this.http.delete<Company>(mUrl)\n      .pipe(\n        catchError(this.handleError<Company>('Error deleting company'))\n      )   \n  }\n\n  addCompany = (company: Company) : Observable<Company> => {\n    const mUrl = this.getUrlApiCompanies() + '/company/add';        \n    return this.http.post<Company>(mUrl,company,httpOptions);\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export class Company {    \n    \"_id\" : string;\n    \"name\": string;\n    \"code\": string;\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"divTable\\\">\\n    <div class=\\\"divTableBody\\\">\\n        <div class=\\\"divTableRow\\\">            \\n            <div class=\\\"divTableCell\\\" *ngIf=\\\"elementId1\\\">\\n                <app-line-chart [data]=\\\"data1\\\" [config]=\\\"config1\\\" [elementId]=\\\"elementId1\\\"></app-line-chart>\\n            </div>                                    \\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit,OnChanges, Input } from '@angular/core';\nimport { LineChartConfig } from '../line-char-config-class';\nimport {Company} from '../company';\nimport {ChartStocksService} from '../chart-stocks.service';\nimport {GoogleChartBaseService} from '../google-chart-base.service';\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnChanges {\n  \n  @Input() companies: Company[];\n  @Input() period: string; \n\n  data1: any[] = [];\n  config1: LineChartConfig;\n  elementId1: String;\n\n  constructor(\n    private chartStocksService: ChartStocksService,\n    private googleChartBaseService: GoogleChartBaseService\n  ) { }\n\n  ngOnChanges(): void {     \n    if (this.companies){            \n      this.setDataLineChart(this.companies);\n    }      \n  }\n\n  setDataLineChart(companies: Company[]){\n    let companiesCodes = this.companies.map((company: Company) => {\n      return company.code;        \n    });\n\n    var mData: any[] = [];    \n    \n    this.chartStocksService.stocksSearchValues(companiesCodes,this.period)\n        .subscribe((data) => {\n          \n          companiesCodes.map((code,index) => {            \n            // Chart data for this company\n            const chart = data[code].chart;\n            \n            chart.map((stock,i) => {             \n              var mDate = new Date(stock.date);\n              \n              if (index == 0){\n                mData.push([mDate]);\n              }          \n              \n              mData[i].push(stock.vwap);                            \n\n            });                       \n          })          \n          \n          // Get the google.visualization.DataTable object from the service\n          // Doesn't work outside the Observable!!\n          var dataTable = this.googleChartBaseService.getDataTable();\n\n          dataTable.addColumn('date', 'date');\n    \n          //Add the columns with the company codes\n          companiesCodes.map(code => {\n            dataTable.addColumn('number', code);                        \n          });                   \n          \n          \n          dataTable.addRows(mData);          \n\n          this.config1 = new LineChartConfig('Stocks value', \"VWAP value\");\n          this.data1 = dataTable;\n          this.elementId1 = 'stocksLineChart';     \n        });    \n  }\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var google: any;\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GoogleChartBaseService {\n\n  constructor() {\n    google.charts.load('current', {'packages':['corechart']});\n  }\n\n  \n\n  protected buildChart(data: any, chartFunc: any, options: any) : void {        \n    var func = (chartFunc, options) => {           \n      chartFunc().draw(data, options); \n    };   \n    var callback = () => func(chartFunc, options);\n    \n    google.charts.setOnLoadCallback(callback);\n  }\n\n  public getDataTable() : any {\n    return new google.visualization.DataTable();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {GoogleChartBaseService} from './google-chart-base.service';\nimport {LineChartConfig} from './line-char-config-class';\n\ndeclare var google: any;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleLineChartService extends GoogleChartBaseService{\n\n  constructor() {\n    super();\n  }\n\n  public BuildLineChart(elementId: string, data: any, config: LineChartConfig) : void {  \n    var chartFunc = () => {       \n      return new google.visualization.LineChart(document.getElementById(elementId));\n    };  \n\n    var options = {                           \n      tooltip: {\n        isHtml: false,        \n        showColorCode: true,\n        textStyle: {                \n          color: '#212121',\n          fontSize: 11,                         \n        },        \n      },      \n      title: config.title,\n      subtitle: config.subtitle,\n      backgroundColor: '#607D8B',\n      fontName: 'Roboto',            \n      hAxis: {\n        textStyle: {                \n          color: '#FFFFFF',\n          fontSize: 12,                \n        },              \n      },\n      vAxis: {\n        textStyle: {                \n          color: '#FFFFFF',\n          fontSize: 12,                \n        },\n        format:'# $'\n      },\n      titleTextStyle: {\n        color: '#FFFFFF',\n        fontSize: 12,              \n      },\n      focusTarget: 'category',\n      \n    };      \n      \n    \n    this.buildChart(data, chartFunc, options);\n  }\n\n}\n","export class LineChartConfig {\n  title: string;\n  subtitle: string\n\n  constructor(title: string, subtitle: string) {\n      this.title = title;\n      this.subtitle = subtitle;\n  }\n}","module.exports = \"\"","module.exports = \"<div id=\\\"{{elementId}}\\\" style=\\\"width: 100%\\\"></div>\\n\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { GoogleLineChartService } from '../google-line-chart.service';\nimport { LineChartConfig } from '../line-char-config-class';\n\ndeclare var google: any;\n\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css'],  \n})\nexport class LineChartComponent implements OnChanges {\n\n  @Input() data: any;\n  @Input() config: LineChartConfig;\n  @Input() elementId: string;\n\n  constructor(private _lineChartService: GoogleLineChartService) { }\n  \n  ngOnChanges(): void{    \n    this._lineChartService.BuildLineChart(this.elementId, this.data, this.config); \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WebsocketService } from './websocket.service';\nimport { catchError, map } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\nconst SOCKET_URL = 'ws://localhost:4300/';\n\nexport interface Message {\n\taction: string,\t\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketBroadcastService {\n\n  public messages: Subject<Message>;\n\n  constructor(wsService: WebsocketService) {\n\t\t\n\t\tthis.messages = <Subject<Message>>wsService\n      .connect(SOCKET_URL)        \n\t\t\t.pipe(\t\t\t\t\n\t\t\t\tmap((response: MessageEvent): Message => {\n\t\t\t\t\tlet data = JSON.parse(response.data);\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: data.action\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tcatchError(error => of(null))\n\t\t\t)   \t\t\t\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WebsocketService {\n\n  constructor() { }\n\n  private subject: Rx.Subject<MessageEvent>;\n  public connect(url): Rx.Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      //console.log(\"Successfully connected: \" + url);\n    } \n    return this.subject;\n  }\n\n  private create(url): Rx.Subject<MessageEvent> {\n    let ws = new WebSocket(url);\n\n    let observable = Rx.Observable.create(\n\t(obs: Rx.Observer<MessageEvent>) => {\n\t\tws.onmessage = obs.next.bind(obs);\n\t\tws.onerror = obs.error.bind(obs);\n\t\tws.onclose = obs.complete.bind(obs);\n\t\treturn ws.close.bind(ws);\n\t})\nlet observer = {\n\t\tnext: (data: Object) => {\n\t\t\tif (ws.readyState === WebSocket.OPEN) {\n\t\t\t\tws.send(JSON.stringify(data));\n\t\t\t}\n\t\t}\n\t}\n\treturn Rx.Subject.create(observer, observable);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}